{
  "description": "The PRAW architecture is designed as a robust API wrapper, providing an object-oriented interface to the Reddit API. It centers around the `API Client Core`, which orchestrates all network interactions, leveraging the `Configuration Manager` for settings and delegating raw response processing to the `Object Transformation Layer`. This layer is responsible for mapping raw API data into rich `Reddit Data Models`, which encapsulate Reddit entities and their behaviors. For handling collections and real-time data, the `Listing & Stream Processors` work in conjunction with the `API Client Core` and `Reddit Data Models`. Critical to its reliability, the `Exception Handling` component provides structured error reporting across the system. This design ensures a clear separation of concerns, facilitating maintainability, extensibility, and a developer-friendly experience, making it ideal for both documentation and visual flow graph representation.",
  "components": [
    {
      "name": "API Client Core",
      "description": "The central orchestrator for all interactions with the Reddit API, managing HTTP requests, authentication, and rate limiting.",
      "referenced_source_code": [
        {
          "qualified_name": "praw.reddit.Reddit.__init__",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/praw/praw/reddit.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        },
        {
          "qualified_name": "praw.reddit.Reddit.request",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/praw/praw/reddit.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        },
        {
          "qualified_name": "praw.reddit.Reddit._objectify_request",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/praw/praw/reddit.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        },
        {
          "qualified_name": "praw.reddit.Reddit._handle_rate_limit",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/praw/praw/reddit.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        }
      ],
      "can_expand": true
    },
    {
      "name": "Configuration Manager",
      "description": "Handles the loading, storage, and provision of PRAW's operational settings, including API credentials and user agent strings.",
      "referenced_source_code": [
        {
          "qualified_name": "praw.config.Config.__init__",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/praw/praw/config.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        },
        {
          "qualified_name": "praw.config.Config._load_config",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/praw/praw/config.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        }
      ],
      "can_expand": false
    },
    {
      "name": "Object Transformation Layer",
      "description": "Acts as a data mapper, converting raw JSON responses from the Reddit API into rich, object-oriented Python representations (`Reddit Data Models`).",
      "referenced_source_code": [
        {
          "qualified_name": "praw.objector.Objector.objectify",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/praw/praw/objector.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        },
        {
          "qualified_name": "praw.objector.Objector.check_error",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/praw/praw/objector.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        }
      ],
      "can_expand": true
    },
    {
      "name": "Reddit Data Models",
      "description": "A comprehensive set of classes representing various Reddit entities (e.g., `Subreddit`, `Submission`, `Comment`, `Redditor`). These models encapsulate data and provide high-level methods for interacting with their respective API endpoints.",
      "referenced_source_code": [
        {
          "qualified_name": "praw.models.reddit.subreddit.Subreddit.submit",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/praw/praw/models/reddit/subreddit.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        },
        {
          "qualified_name": "praw.models.reddit.submission.Submission._fetch_data",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/praw/praw/models/reddit/submission.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        },
        {
          "qualified_name": "praw.models.reddit.comment.Comment.parent",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/praw/praw/models/reddit/comment.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        },
        {
          "qualified_name": "praw.models.reddit.redditor.Redditor._fetch_info",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/praw/praw/models/reddit/redditor.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        },
        {
          "qualified_name": "praw.models.reddit.mixins.votable.VotableMixin._vote",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/praw/praw/models/reddit/mixins/votable.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        }
      ],
      "can_expand": true
    },
    {
      "name": "Listing & Stream Processors",
      "description": "Provides mechanisms for iterating through paginated API responses (listings) and consuming real-time data streams from Reddit, handling pagination logic and item uniqueness.",
      "referenced_source_code": [
        {
          "qualified_name": "praw.models.listing.generator.ListingGenerator.__next__",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/praw/praw/models/listing/generator.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        },
        {
          "qualified_name": "praw.models.listing.generator.ListingGenerator._next_batch",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/praw/praw/models/listing/generator.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        }
      ],
      "can_expand": true
    },
    {
      "name": "Exception Handling",
      "description": "Defines a hierarchy of custom exception classes specific to PRAW and provides utilities to translate raw API error messages into structured exceptions.",
      "referenced_source_code": [
        {
          "qualified_name": "praw.exceptions.PRAWException",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/praw/praw/exceptions.py",
          "reference_start_line": 14,
          "reference_end_line": 15
        },
        {
          "qualified_name": "praw.exceptions.parse_exception_list",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/praw/praw/exceptions.py",
          "reference_start_line": 173,
          "reference_end_line": 189
        }
      ],
      "can_expand": true
    }
  ],
  "components_relations": [
    {
      "relation": "uses",
      "src_name": "API Client Core",
      "dst_name": "Configuration Manager"
    },
    {
      "relation": "sends raw responses to",
      "src_name": "API Client Core",
      "dst_name": "Object Transformation Layer"
    },
    {
      "relation": "reports errors to",
      "src_name": "API Client Core",
      "dst_name": "Exception Handling"
    },
    {
      "relation": "receives raw responses from",
      "src_name": "Object Transformation Layer",
      "dst_name": "API Client Core"
    },
    {
      "relation": "instantiates",
      "src_name": "Object Transformation Layer",
      "dst_name": "Reddit Data Models"
    },
    {
      "relation": "parses errors with",
      "src_name": "Object Transformation Layer",
      "dst_name": "Exception Handling"
    },
    {
      "relation": "initiates requests via",
      "src_name": "Reddit Data Models",
      "dst_name": "API Client Core"
    },
    {
      "relation": "are utilized by",
      "src_name": "Reddit Data Models",
      "dst_name": "Listing & Stream Processors"
    },
    {
      "relation": "fetches batches via",
      "src_name": "Listing & Stream Processors",
      "dst_name": "API Client Core"
    },
    {
      "relation": "utilizes",
      "src_name": "Listing & Stream Processors",
      "dst_name": "Reddit Data Models"
    },
    {
      "relation": "receives errors from",
      "src_name": "Exception Handling",
      "dst_name": "API Client Core"
    },
    {
      "relation": "receives parsed errors from",
      "src_name": "Exception Handling",
      "dst_name": "Object Transformation Layer"
    }
  ]
}
